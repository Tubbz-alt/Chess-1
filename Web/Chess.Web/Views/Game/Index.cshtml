@{
    this.ViewData["Title"] = "New Game";
}

@using Chess.Data.Models;

<link rel="stylesheet" href="css/chessboard-1.0.0.min.css">
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
<script src="js/chessboard-1.0.0.min.js"></script>
<div id="board1" style="width: 600px"></div>
<script>
    function onDrop(source, target, piece, newPos, oldPos, orientation) {
        console.log('Source: ' + source)
        console.log('Target: ' + target)
        console.log('Piece: ' + piece)
        console.log('New position: ' + Chessboard.objToFen(newPos))
        console.log('Old position: ' + Chessboard.objToFen(oldPos))
        console.log('Orientation: ' + orientation)
        console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')

        @{
            var player1 = Factory.GetPlayer("Test Player 1", Chess.Common.Enums.Color.Light);
            var player2 = Factory.GetPlayer("Test Player 2", Chess.Common.Enums.Color.Dark);
            var game = Factory.GetGame(player1, player2);
            //game.Start();
        }
    }

    var config = {
        pieceTheme: 'img/chesspieces/wikipedia/{piece}.png',
        draggable: true,
        dropOffBoard: 'snapback', // this is the default
        showNotation: true,
        orientation: 'white',
        onDrop: onDrop,
        position: 'start'
    }
    var board1 = ChessBoard('board1', config);
</script>