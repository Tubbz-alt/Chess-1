@using Chess.Data.Models;

@{
    this.ViewData["Title"] = "Game Room";
}

<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/chessboard-1.0.0.min.js"></script>

<link rel="stylesheet" href="~/css/chessboard-1.0.0.min.css">

<main id="main" class="container-fluid text-center">
    <div id="timeView" class="row" style="display:none;">
        <h4 id="timeName"></h4>
        <p id="timeStatus"></p>
        <div class="timeO">

        </div>
        <div class="timeE">

        </div>
    </div>

    <div id="findOpponent" class="row m-5">
        <div class="mx-auto my-auto text-center">
            <p id="status" class="row help-block m-3 text-center">Please enter your desired username.</p>
            <div class="form-inline">
                <div class="form-group mr-2" id="usernameGroup">
                    <label class="sr-only control-label" for="username">Username</label>
                    <input type="text" class="form-control" id="username" placeholder="Username" autofocus />
                </div>
                <button type="submit" id="findGame" class="btn btn-primary">Find Game</button>
                <p id="hidden" class="help-block" style="visibility:hidden"></p>
            </div>
        </div>
    </div>
</main>

<div id="board1" style="width: 600px; visibility: hidden"></div>

<script>
    $(function () {
        var connection = new signalR.HubConnectionBuilder().withUrl("/hub").build();
        connection.start();

        var playerId;
        var playerColor;
        var playerName;
        var gameOver;

        $('#findGame').click(function () {
            var name = $('#username').val();
            connection.invoke("FindGame", name);
            document.getElementById("findGame").disabled = true;
        })

        connection.on("PlayerJoined", function (player) {
            playerId = player.id;
            console.log(playerId)
        })

        connection.on("WaitingList", function () {
            $('#status').html("Waiting for an opponent");
        })

        connection.on("Start", function (game) {
            if (game.id != "") {
                document.getElementById('findOpponent').style.display = "none";
                document.getElementById('board1').style.visibility = "visible";
            }
        })

        connection.on("MoveDone", function (source, target) {
            board1.move(`${source}-${target}`);
        })

        function onDrop(source, target) {
            connection.invoke("MoveSelected", source, target);
        }

        var config = {
            pieceTheme: 'img/chesspieces/wikipedia/{piece}.png',
            draggable: true,
            dropOffBoard: 'snapback', // this is the default
            showNotation: true,
            orientation: 'white',
            onDrop: onDrop,
            position: 'start'
        }

        var board1 = ChessBoard('board1', config);
    })
</script>
